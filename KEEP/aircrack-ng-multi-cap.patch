From 6c0591f7b8eea16d304fcc42c674b8cfb976c838 Mon Sep 17 00:00:00 2001
From: rofl0r <retnyg@gmx.net>
Date: Mon, 16 Oct 2017 16:23:01 +0100
Subject: [PATCH] aircrack: fix breakage reading more than one .cap file for
 WEP

a guy which apparently has no clue about concurrency issues involved
when using more than one thread submitted patches to mute valgrind
claiming memory leaks of a couple statically allocated buffers for
usage by the read threads. he "fixed" it by introducing a global variable
which all threads would happily use without doing any locking on them.

the culprit was commit 351dcab475a642f3f6f13306e7686d26ffadd6bc .
---
 src/aircrack-ng.c | 40 +++++++++++++---------------------------
 1 file changed, 13 insertions(+), 27 deletions(-)

diff --git a/src/aircrack-ng.c b/src/aircrack-ng.c
index ea70c04..04d9386 100644
--- a/src/aircrack-ng.c
+++ b/src/aircrack-ng.c
@@ -156,8 +156,6 @@ typedef struct
 }
 read_buf;
 
-read_buf rb, crb;
-
 int K_COEFF[N_ATTACKS] =
 {
 	15, 13, 12, 12, 12, 5, 5, 5, 3, 4, 3, 4, 3, 13, 4, 4, -20
@@ -301,29 +299,6 @@ void clean_exit(int ret)
 		}
 	}
 
-	if (rb.buf1 != NULL)
-	{
-		free(rb.buf1);
-		rb.buf1=NULL;
-	}
-
-	if (rb.buf2 != NULL)
-	{
-		free(rb.buf2);
-		rb.buf2=NULL;
-	}
-
-	if (crb.buf1 != NULL)
-	{
-		free(crb.buf1);
-		crb.buf1=NULL;
-	}
-
-	if (crb.buf2 != NULL)
-	{
-		free(crb.buf2);
-		crb.buf2=NULL;
-	}
 
 	if (buffer != NULL) {
 		free(buffer);
@@ -835,6 +810,15 @@ int atomic_read( read_buf *rb, int fd, int len, void *buf )
 
 void read_thread( void *arg )
 {
+	/* we dont care if the buffers allocated here are not freed
+	 * since those threads are only created once, and the memory
+	 * is released to the OS automatically when the program exits.
+	 * there's no point in trying to mute valgrind but breaking
+	 * the multithreaded code at the same time - yes, i'm looking
+	 * at you, Len White. */
+
+	read_buf rb = {0};
+
 	int fd, n, fmt;
 	unsigned z;
 	int eof_notified = 0;
@@ -856,7 +840,6 @@ void read_thread( void *arg )
 
 	signal( SIGINT, sighandler);
 
-	memset( &rb, 0, sizeof( rb ) );
 	ap_cur = NULL;
 
 	memset(&pfh, 0, sizeof(struct pcap_file_header));
@@ -1790,6 +1773,10 @@ void read_thread( void *arg )
 
 void check_thread( void *arg )
 {
+	/* in case you see valgrind warnings, read the comment on top
+	 * read_thread */
+	read_buf crb = {0};
+
 	int fd, n, fmt;
 	unsigned z;
 // 	int ret=0;
@@ -1809,7 +1796,6 @@ void check_thread( void *arg )
 	struct AP_info *ap_prv, *ap_cur;
 	struct ST_info *st_prv, *st_cur;
 
-	memset( &crb, 0, sizeof( crb ) );
 	ap_cur = NULL;
 
 	if( ( buffer = (unsigned char *) malloc( 65536 ) ) == NULL )
-- 
2.13.3

