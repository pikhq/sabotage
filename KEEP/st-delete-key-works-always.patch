st's author is of the opinion that it's only correct for the delete key
to actually act as delete when the terminal's keypad mode has been
activated. as some apps, and most notably bash and busybox sh don't do
that (mksh does, though), the delete key doesn't work in those apps
unless the user manually activates the keypad with `tput smkx`.
since that is not the default mode of the terminal, a subsequent `reset`
turns off the keypad mode and the user has to activate it again in order
to be able to use the delete key in bash.

this patch changes this behaviour by setting the delete key to always
emit the `delete character key` sequence, also known as `kdch1` in
terminfo, regardless of the keypad state of the terminal.

--- a/config.def.h	2017-01-10 16:13:59.820353074 +0000
+++ b/config.def.h	2017-01-10 16:14:48.924739185 +0000
@@ -315,8 +315,7 @@
 	{ XK_Delete,        ControlMask,    "\033[3;5~",    +1,    0,    0},
 	{ XK_Delete,        ShiftMask,      "\033[2K",      -1,    0,    0},
 	{ XK_Delete,        ShiftMask,      "\033[3;2~",    +1,    0,    0},
-	{ XK_Delete,        XK_ANY_MOD,     "\033[P",       -1,    0,    0},
-	{ XK_Delete,        XK_ANY_MOD,     "\033[3~",      +1,    0,    0},
+	{ XK_Delete,        XK_ANY_MOD,     "\033[3~",       0,    0,    0},
 	{ XK_BackSpace,     XK_NO_MOD,      "\177",          0,    0,    0},
 	{ XK_BackSpace,     Mod1Mask,       "\033\177",      0,    0,    0},
 	{ XK_Home,          ShiftMask,      "\033[2J",       0,   -1,    0},
